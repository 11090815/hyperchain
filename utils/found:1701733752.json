{
    "results": [
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/common/capabilities/channel.go",
            "matches": [
                {
                    "line_num": 86,
                    "content": "// MSPVersion returns the level of MSP support required by this channel."
                },
                {
                    "line_num": 87,
                    "content": "func (cp *ChannelProvider) MSPVersion() msp.MSPVersion {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/common/capabilities/channel_test.go",
            "matches": [
                {
                    "line_num": 20,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_0)"
                },
                {
                    "line_num": 31,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_1)"
                },
                {
                    "line_num": 43,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_3)"
                },
                {
                    "line_num": 52,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_3)"
                },
                {
                    "line_num": 64,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_3)"
                },
                {
                    "line_num": 73,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_3)"
                },
                {
                    "line_num": 86,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_4_3)"
                },
                {
                    "line_num": 95,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_4_3)"
                },
                {
                    "line_num": 106,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_4_3)"
                },
                {
                    "line_num": 117,
                    "content": "\trequire.True(t, cp.MSPVersion() == msp.MSPv1_4_3)"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/common/channelconfig/api.go",
            "matches": [
                {
                    "line_num": 126,
                    "content": "\t// MSPVersion specifies the version of the MSP this channel must understand, including the MSP types"
                },
                {
                    "line_num": 128,
                    "content": "\tMSPVersion() msp.MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/common/channelconfig/channel.go",
            "matches": [
                {
                    "line_num": 98,
                    "content": "\tmspConfigHandler := NewMSPConfigHandler(channelCapabilities.MSPVersion(), bccsp)"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/common/channelconfig/msp.go",
            "matches": [
                {
                    "line_num": 27,
                    "content": "\tversion msp.MSPVersion"
                },
                {
                    "line_num": 32,
                    "content": "func NewMSPConfigHandler(mspVersion msp.MSPVersion, bccsp bccsp.BCCSP) *MSPConfigHandler {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/common/channelconfig/msp_test.go",
            "matches": [
                {
                    "line_num": 27,
                    "content": "\tmspVers := []msp.MSPVersion{msp.MSPv1_0, msp.MSPv1_1}"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/core/chaincode/lifecycle/mock/msp.go",
            "matches": [
                {
                    "line_num": 79,
                    "content": "\tGetVersionStub        func() msp.MSPVersion"
                },
                {
                    "line_num": 84,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 87,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 472,
                    "content": "func (fake *MSP) GetVersion() msp.MSPVersion {"
                },
                {
                    "line_num": 495,
                    "content": "func (fake *MSP) GetVersionCalls(stub func() msp.MSPVersion) {"
                },
                {
                    "line_num": 501,
                    "content": "func (fake *MSP) GetVersionReturns(result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 506,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 510,
                    "content": "func (fake *MSP) GetVersionReturnsOnCall(i int, result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 516,
                    "content": "\t\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 520,
                    "content": "\t\tresult1 msp.MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/core/committer/txvalidator/v14/validator_test.go",
            "matches": [
                {
                    "line_num": 569,
                    "content": "func (fake *mockMSP) GetVersion() msp.MSPVersion {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/core/committer/txvalidator/v20/validator_test.go",
            "matches": [
                {
                    "line_num": 402,
                    "content": "func (fake *mockMSP) GetVersion() msp.MSPVersion {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/core/ledger/kvledger/benchmark/mocks/msp.go",
            "matches": [
                {
                    "line_num": 27,
                    "content": "func (msp *noopmsp) GetVersion() msp.MSPVersion {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/internal/peer/gossip/mocks/channel_capabilities.go",
            "matches": [
                {
                    "line_num": 31,
                    "content": "\tMSPVersionStub        func() msp.MSPVersion"
                },
                {
                    "line_num": 36,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 39,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 169,
                    "content": "func (fake *ChannelCapabilities) MSPVersion() msp.MSPVersion {"
                },
                {
                    "line_num": 174,
                    "content": "\tfake.recordInvocation(\"MSPVersion\", []interface{}{})"
                },
                {
                    "line_num": 176,
                    "content": "\tif fake.MSPVersionStub != nil {"
                },
                {
                    "line_num": 177,
                    "content": "\t\treturn fake.MSPVersionStub()"
                },
                {
                    "line_num": 186,
                    "content": "func (fake *ChannelCapabilities) MSPVersionCallCount() int {"
                },
                {
                    "line_num": 192,
                    "content": "func (fake *ChannelCapabilities) MSPVersionCalls(stub func() msp.MSPVersion) {"
                },
                {
                    "line_num": 195,
                    "content": "\tfake.MSPVersionStub = stub"
                },
                {
                    "line_num": 198,
                    "content": "func (fake *ChannelCapabilities) MSPVersionReturns(result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 201,
                    "content": "\tfake.MSPVersionStub = nil"
                },
                {
                    "line_num": 203,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 207,
                    "content": "func (fake *ChannelCapabilities) MSPVersionReturnsOnCall(i int, result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 210,
                    "content": "\tfake.MSPVersionStub = nil"
                },
                {
                    "line_num": 213,
                    "content": "\t\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 217,
                    "content": "\t\tresult1 msp.MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/internal/pkg/gateway/mocks/channel_capabilities.go",
            "matches": [
                {
                    "line_num": 31,
                    "content": "\tMSPVersionStub        func() msp.MSPVersion"
                },
                {
                    "line_num": 36,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 39,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 171,
                    "content": "func (fake *ChannelCapabilities) MSPVersion() msp.MSPVersion {"
                },
                {
                    "line_num": 176,
                    "content": "\tstub := fake.MSPVersionStub"
                },
                {
                    "line_num": 178,
                    "content": "\tfake.recordInvocation(\"MSPVersion\", []interface{}{})"
                },
                {
                    "line_num": 189,
                    "content": "func (fake *ChannelCapabilities) MSPVersionCallCount() int {"
                },
                {
                    "line_num": 195,
                    "content": "func (fake *ChannelCapabilities) MSPVersionCalls(stub func() msp.MSPVersion) {"
                },
                {
                    "line_num": 198,
                    "content": "\tfake.MSPVersionStub = stub"
                },
                {
                    "line_num": 201,
                    "content": "func (fake *ChannelCapabilities) MSPVersionReturns(result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 204,
                    "content": "\tfake.MSPVersionStub = nil"
                },
                {
                    "line_num": 206,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 210,
                    "content": "func (fake *ChannelCapabilities) MSPVersionReturnsOnCall(i int, result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 213,
                    "content": "\tfake.MSPVersionStub = nil"
                },
                {
                    "line_num": 216,
                    "content": "\t\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 220,
                    "content": "\t\tresult1 msp.MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/factory.go",
            "matches": [
                {
                    "line_num": 15,
                    "content": "type MSPVersion int"
                },
                {
                    "line_num": 27,
                    "content": "\tGetVersion() MSPVersion"
                },
                {
                    "line_num": 32,
                    "content": "\tVersion MSPVersion"
                },
                {
                    "line_num": 35,
                    "content": "func (o *NewBaseOpts) GetVersion() MSPVersion {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/factory_test.go",
            "matches": [
                {
                    "line_num": 45,
                    "content": "\trequire.Equal(t, MSPVersion(MSPv1_0), i.(*bccspmsp).version)"
                },
                {
                    "line_num": 58,
                    "content": "\trequire.Equal(t, MSPVersion(MSPv1_1), i.(*bccspmsp).version)"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/idemix.go",
            "matches": [
                {
                    "line_num": 77,
                    "content": "func (i *idemixMSPWrapper) GetVersion() MSPVersion {"
                },
                {
                    "line_num": 78,
                    "content": "\treturn MSPVersion(i.Idemixmsp.GetVersion())"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/mocks/mocks.go",
            "matches": [
                {
                    "line_num": 35,
                    "content": "func (m *MockMSP) GetVersion() msp.MSPVersion {"
                },
                {
                    "line_num": 37,
                    "content": "\treturn args.Get(0).(msp.MSPVersion)"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/msp.go",
            "matches": [
                {
                    "line_num": 69,
                    "content": "\tGetVersion() MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/msp_test.go",
            "matches": [
                {
                    "line_num": 1422,
                    "content": "func getLocalMSPWithVersionAndError(t *testing.T, dir string, version MSPVersion) (MSP, error) {"
                },
                {
                    "line_num": 1453,
                    "content": "func getLocalMSPWithVersion(t *testing.T, dir string, version MSPVersion) MSP {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/msp/mspimpl.go",
            "matches": [
                {
                    "line_num": 45,
                    "content": "\tversion MSPVersion"
                },
                {
                    "line_num": 113,
                    "content": "func newBccspMsp(version MSPVersion, defaultBCCSP bccsp.BCCSP) (MSP, error) {"
                },
                {
                    "line_num": 149,
                    "content": "func NewBccspMspWithKeyStore(version MSPVersion, keyStore bccsp.KeyStore, bccsp bccsp.BCCSP) (MSP, error) {"
                },
                {
                    "line_num": 272,
                    "content": "func (msp *bccspmsp) GetVersion() MSPVersion {"
                },
                {
                    "line_num": 440,
                    "content": "func collectPrincipals(principal *m.MSPPrincipal, mspVersion MSPVersion) ([]*m.MSPPrincipal, error) {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/orderer/common/multichannel/mocks/channel_capabilities.go",
            "matches": [
                {
                    "line_num": 31,
                    "content": "\tMSPVersionStub        func() msp.MSPVersion"
                },
                {
                    "line_num": 36,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 39,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 171,
                    "content": "func (fake *ChannelCapabilities) MSPVersion() msp.MSPVersion {"
                },
                {
                    "line_num": 176,
                    "content": "\tstub := fake.MSPVersionStub"
                },
                {
                    "line_num": 178,
                    "content": "\tfake.recordInvocation(\"MSPVersion\", []interface{}{})"
                },
                {
                    "line_num": 189,
                    "content": "func (fake *ChannelCapabilities) MSPVersionCallCount() int {"
                },
                {
                    "line_num": 195,
                    "content": "func (fake *ChannelCapabilities) MSPVersionCalls(stub func() msp.MSPVersion) {"
                },
                {
                    "line_num": 198,
                    "content": "\tfake.MSPVersionStub = stub"
                },
                {
                    "line_num": 201,
                    "content": "func (fake *ChannelCapabilities) MSPVersionReturns(result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 204,
                    "content": "\tfake.MSPVersionStub = nil"
                },
                {
                    "line_num": 206,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 210,
                    "content": "func (fake *ChannelCapabilities) MSPVersionReturnsOnCall(i int, result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 213,
                    "content": "\tfake.MSPVersionStub = nil"
                },
                {
                    "line_num": 216,
                    "content": "\t\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 220,
                    "content": "\t\tresult1 msp.MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/orderer/consensus/etcdraft/mocks/msp.go",
            "matches": [
                {
                    "line_num": 79,
                    "content": "\tGetVersionStub        func() msp.MSPVersion"
                },
                {
                    "line_num": 84,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 87,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 478,
                    "content": "func (fake *MSP) GetVersion() msp.MSPVersion {"
                },
                {
                    "line_num": 502,
                    "content": "func (fake *MSP) GetVersionCalls(stub func() msp.MSPVersion) {"
                },
                {
                    "line_num": 508,
                    "content": "func (fake *MSP) GetVersionReturns(result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 513,
                    "content": "\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 517,
                    "content": "func (fake *MSP) GetVersionReturnsOnCall(i int, result1 msp.MSPVersion) {"
                },
                {
                    "line_num": 523,
                    "content": "\t\t\tresult1 msp.MSPVersion"
                },
                {
                    "line_num": 527,
                    "content": "\t\tresult1 msp.MSPVersion"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/vendor/github.com/IBM/idemix/idemixmsp.go",
            "matches": [
                {
                    "line_num": 58,
                    "content": "type MSPVersion int"
                },
                {
                    "line_num": 73,
                    "content": "\tversion      MSPVersion"
                },
                {
                    "line_num": 85,
                    "content": "func NewIdemixMsp(version MSPVersion) (MSP, error) {"
                },
                {
                    "line_num": 257,
                    "content": "func (msp *Idemixmsp) GetVersion() MSPVersion {"
                }
            ]
        },
        {
            "file_name": "/home/iris/research/code/go/src/github.com/hyperledger/fabric-3.0.0-preview/vendor/github.com/IBM/idemix/msp.go",
            "matches": [
                {
                    "line_num": 69,
                    "content": "\tGetVersion() MSPVersion"
                }
            ]
        }
    ]
}